
概念：
1.大小因子 size factor:
    表示一种独立于特定平台的结点中文字的大小。
2.大小 size
    表示结点被显示时占据显示设备的大小。
    它与结点位置一起构成结点所占据的矩形。
    它可由结点中要被显示的内容与大小因子计算得到，
        计算过程由DisplayHint完成，
        计算过程是平台相关的。因此DisplayHint封装了这一过程，
        QT上该过程由其子类QtDisplayHint完成。

virtual void display(OutputBase &o,Point topLeft) const = 0;
    用于显示结点。
    子类可能实现：NodeHorizontal，它会只显示自身的符号，通过notation()获得。

virtual SizeFactor getMinimumSizeFactor(DepthNum) const = 0;
    DepthNum: 目前是int的别名，表示当前结点在整个表达式树中的深度。
    这个函数作用是获得结点的“最小”尺寸因子（考虑到结点的子结点尺寸因子不能太小）
    这个函数与 NodeBase::updateSize 结合可实现子结点比父结点小且大小合适。
    子类可能实现：对于NodeHorizontal，它可能会调用左右子结点的getMinimumSizeFactor函数，
               并返回二者返回值中较大者。
               对于Node_Number，它会查询对于数字允许的最小大小因子并返回它。


virtual void updateSize(SizeFactor sizeFactor);
    根据sizeFactor更新尺寸。
    子类可能实现：对于NodeHorizontal，它会根据合适的SizeFactor调用左右子结点的updateSize函数，
                并做其它的一些调整，代码：

void NodeHorizontal::updateSize(SizeFactor newSizeFactor)
{
    using namespace NodeHorizontal_impl;
    NodeBase::updateSize(newSizeFactor);

    SizeFactor newChildSizeFactor = computSizeFactorOfChildNode(newSizeFactor);
    left->updateSize(newChildSizeFactor);
    right->updateSize(newChildSizeFactor);
    if(getFactorOfCurrentSize() != newSizeFactor)
    {
        updateMyNotationSize(newSizeFactor);
    }
    updateMySize();
    updateChildAndNotaionPosition();
}

